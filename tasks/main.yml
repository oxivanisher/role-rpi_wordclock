---
- name: Ensure required packages
  ansible.builtin.package:
    name:
      - python3-full
      - python3-scipy
      - python3-freetype
      - python3-virtualenv
      - python3-pil
      - python3-werkzeug
      - python3-coloredlogs
      - python3-astral
      - python3-monotonic
      - python3-netifaces
      - python3-svgwrite
      - python3-packaging
      - swig
      - fonts-freefont-ttf
      - libopenjp2-7
      - libpq-dev
    state: present
  become: true
  become_user: root

# Since we are using the python3 version of the clock (develop branch), it is not clear on how to configure the
# temperature sensor. The following block was for the python 2 version and at some future date, it might be
# supported and documented on the project homepage. Today I won't sink time into this, since I don't use
# this sensor anyways.
# - name: Ensure required packages for bcm2835 library
#   ansible.builtin.package:
#     name: ['build-essential', 'libcap2', 'libcap-dev']
#     state: present

# - name: Download and extract bcm2835 library
#   ansible.builtin.unarchive:
#     src: "{{ rpi_wordclock_bcm2835_tar_url }}"
#     dest: /home/pi
#     remote_src: true
#     owner: pi
#     group: pi
#   register: bcm2835_libdir

# - name: Running make for bcm2835 library
#   ansible.builtin.command: make
#   args:
#     chdir: "/home/pi/bcm2835-{{ rpi_wordclock_bcm2835_version }}"
#   when: bcm2835_libdir.changed

# - name: Running make check for bcm2835 library
#   ansible.builtin.command: make check
#   args:
#     chdir: "/home/pi/bcm2835-{{ rpi_wordclock_bcm2835_version }}"
#   when: bcm2835_libdir.changed

# - name: Running make install for bcm2835 library
#   ansible.builtin.command: make install
#   args:
#     chdir: "/home/pi/bcm2835-{{ rpi_wordclock_bcm2835_version }}"
#   when: bcm2835_libdir.changed

# - name: Download and extract pywapi library
#   ansible.builtin.unarchive:
#     src: "{{ rpi_wordclock_pywapi_tar_url }}"
#     dest: /home/pi
#     remote_src: yes
#     owner: pi
#     group: pi
#   register: pywapi_libdir

# - name: Running build for pywapi library
#   ansible.builtin.command: python setup.py build
#   args:
#     chdir: "/home/pi/pywapi-{{ rpi_wordclock_pywapi_version }}"
#   when: pywapi_libdir.changed

# - name: Running install for pywapi library
#   ansible.builtin.command: python setup.py install
#   args:
#     chdir: "/home/pi/pywapi-{{ rpi_wordclock_pywapi_version }}"
#   when: pywapi_libdir.changed

- name: Clone wordclock repository
  ansible.builtin.git:
    repo: "https://github.com/oxivanisher/rpi_wordclock.git"
    version: feature/systemd_setup

    # original repo, but sadly my PR is not yet merged
    # repo: "https://github.com/bk1285/rpi_wordclock.git"
    # version: main

    dest: "/home/{{ rpi_wordclock_user }}/rpi_wordclock"
  become: true
  become_user: "{{ rpi_wordclock_user }}"
  notify:
    - Reload systemd
    - Restart wordclock

- name: Ensure pip requirements
  ansible.builtin.pip:
    requirements: /home/{{ rpi_wordclock_user }}/rpi_wordclock/requirements.txt
    # name:
    #   - pytz
    #   - astral
    #   - feedparser
    #   - pillow
    #   - svgwrite
    #   - freetype-py
    #   - netifaces
    #   - monotonic
    #   - flask-restx
    #   - rpi-ws281x
    #   - coloredlogs
    virtualenv_site_packages: true
    virtualenv: "/home/{{ rpi_wordclock_user }}/rpi_wordclock/venv"
  become: true
  become_user: "{{ rpi_wordclock_user }}"

- name: Ensure safe.directory the diry way ... yes it generates changes # noqa command-instead-of-module
  ansible.builtin.command:
    argv:
      - /usr/bin/git
      - config
      - --global
      - --add
      - safe.directory
      - /home/pi/rpi_wordclock
  changed_when: true
  failed_when: false
  become: true
  become_user: root

- name: Ensure wordclock configuration file
  ansible.builtin.copy:
    src: wordclock_config.cfg
    dest: "/home/{{ rpi_wordclock_user }}/rpi_wordclock/wordclock_config/wordclock_config.cfg"
    owner: "{{ rpi_wordclock_user }}"
    group: "{{ rpi_wordclock_user }}"
    mode: "0664"
  notify:
    - Reload systemd
    - Restart wordclock
  become: true
  become_user: "{{ rpi_wordclock_user }}"

- name: Ensure link for systemd unit
  ansible.builtin.file:
    src: "/home/{{ rpi_wordclock_user }}/rpi_wordclock/wordclock_config/wordclock.service"
    dest: /etc/systemd/system/wordclock.service
    state: link
  notify:
    - Reload systemd
    - Restart wordclock
  become: true
  become_user: root

# workaround for https://github.com/bk1285/rpi_wordclock/pull/231
- name: Add dirty cron workaround for color change mode
  ansible.builtin.cron:
    name: "Change wordclock to color cycling"
    special_time: reboot
    job: 'sleep 60 && /usr/bin/curl -s "http://localhost/api/button" -H "Content-Type: application/json" --data-raw "{\"button\":\"right\"}" > /dev/null'
  become: true
  become_user: "{{ rpi_wordclock_user }}"
